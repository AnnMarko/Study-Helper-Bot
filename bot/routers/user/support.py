from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from app.configuration import Configuration

from asyncio import sleep

from bot.core.keyboards import UserFactory
from bot.core.fsm import SupportStates
from .main import send_main_menu


router = Router()


channel_id = Configuration.channel_id


@router.callback_query(UserFactory.filter(F.action == 'support'))
async def support(
        call: CallbackQuery,
        state: FSMContext,
):
    await call.answer()
    await state.set_state(SupportStates.type_message)
    await state.set_data({"message": call.message})

    text = (
        "<b>–ó–≤–µ—Ä–Ω–µ–Ω–Ω—è</b> üñã\n"
        "\n"
        "–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º –≤—Ä–∞–∂–µ–Ω–Ω—è–º –ø—Ä–æ –±–æ—Ç–∞.\n–Ø–∫—â–æ —î –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∞–±–æ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è, –Ω–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ –Ω–∏—Ö!\n"
        "\n"
        "–ú–∏ –±—É–¥–µ–º–æ –í–∞–º –≤–¥—è—á–Ω—ñ‚ù§Ô∏è\n"
    )
    await call.message.edit_text(text=text, reply_markup=UserFactory.support())


@router.message(SupportStates.type_message)
async def support_forward(
        message: Message,
        state: FSMContext,
):
    old_message = (await state.get_data())["message"]
    await old_message.delete_reply_markup()
    await state.clear()

    await message.answer(text="–î—É–∂–µ –¥—è–∫—É—î–º–æ –∑–∞ –í–∞—à–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è!")
    await message.forward(chat_id=channel_id)
    await sleep(1)

    await send_main_menu(message)


@router.callback_query(SupportStates.type_message)
async def ignore(call: CallbackQuery):
    await call.answer()
