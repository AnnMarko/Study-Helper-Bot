from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from bot.core.keyboards import UserFactory

from asyncio import sleep


router = Router()


async def send_main_menu(message: Message):
    await message.answer(
        'üî± <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b> üî∞',
        reply_markup=UserFactory.main_menu()
    )


@router.message(CommandStart())
async def start(message: Message):
    await message.answer(
        '–í—ñ—Ç–∞—é! üòä\n'
        '\n'
        '–Ø –±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ —É –ø—ñ–¥–≥–æ—Ç–æ–≤—Ü—ñ –¥–æ –ù–ú–¢.\n'
        '–ü—Ä–æ—Ö–æ–¥—å —Ç–µ—Å—Ç–∏, —â–æ–± –º–∞—Ç–∏ –¥–æ—Å—Ç–∞–Ω—å–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è —ñ—Å–ø–∏—Ç—ñ–≤!\n'
        '\n'
        'ü§´ –¢–∞–∫–æ–∂ —è –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ —ñ–∑ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ –Ω–∞–ø–∏—Å–∞—Ç–∏ –µ—Å–µ, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–æ—â–æ.\n'
        '–ù–∞–¥—Å–∏–ª–∞–π –∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—Å—å–æ–≥–æ –∑–∞ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω!\n'
        '\n'
        '–•–∞–π —â–∞—Å—Ç–∏—Ç—å üçÄ\n'
    )
    await sleep(0.4)
    await message.answer('üìñ')

    await sleep(1)
    await send_main_menu(message)


@router.callback_query(UserFactory.filter(F.action == 'main_menu'))
async def main_menu_c(call: CallbackQuery, state: FSMContext):
    await call.answer()
    await call.message.delete()

    await send_main_menu(call.message)

    await state.clear()


@router.message(F.text == "–ú–µ–Ω—é")
async def main_menu(message: Message, state: FSMContext):
    state_data = await state.get_data()

    if "message" in state_data:
        try:
            await state_data["message"].delete()
        except TelegramBadRequest:
            pass

    await send_main_menu(message)

    await state.clear()


@router.message(Command('menu'))
async def main_menu_command(message: Message, state: FSMContext):
    state_data = await state.get_data()

    if "message" in state_data:
        try:
            await state_data["message"].delete()
        except TelegramBadRequest:
            pass

    await send_main_menu(message)

    await state.clear()

